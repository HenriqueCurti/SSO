version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: auth_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: .
    container_name: auth_service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/auth_db"
      REDIS_URL: "redis://redis:6379"
      JWT_ACCESS_SECRET: "your-super-secret-access-key-change-this-in-production"
      JWT_REFRESH_SECRET: "your-super-secret-refresh-key-change-this-in-production"
      JWT_ACCESS_EXPIRES_IN: "15m"
      JWT_REFRESH_EXPIRES_IN: "7d"
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - auth_logs:/app/logs
    command: sh -c "npm run prisma:migrate && npm run start"

volumes:
  postgres_data:
  redis_data:
  auth_logs:
